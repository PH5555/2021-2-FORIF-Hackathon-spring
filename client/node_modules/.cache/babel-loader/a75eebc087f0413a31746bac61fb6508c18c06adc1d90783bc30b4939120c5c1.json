{"ast":null,"code":"var _jsxFileName = \"/Users/kimdonghyeon/Documents/GitHub/2021-2-FORIF-Hackathon-spring/client/src/pages/SignIn/SignInContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport SignInPresenter from \"./SignInPresenter\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInContainer = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isVisible, setIsVisible] = useState(false);\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomId, setRoomId] = useState(0);\n  const onRoomNameChange = e => {\n    setRoomName(e.target.value);\n  };\n  const createRoom = useCallback(() => {\n    if (roomName == \"\") {\n      window.alert(\"방 이름을 입력해 주세요!\");\n      return;\n    }\n    //생성하고 id 받아오기\n    setIsVisible(true);\n  }, []);\n  const closeDialog = useCallback(() => {\n    setIsVisible(false);\n    navigate(\"/\");\n  });\n  const props = {\n    createRoom: createRoom,\n    closeDialog: closeDialog,\n    onRoomNameChange: onRoomNameChange,\n    roomName,\n    isVisible,\n    roomId\n  };\n  return /*#__PURE__*/_jsxDEV(SignInPresenter, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n_s(SignInContainer, \"V6BP52MpyOhAszoTGEaZFJzs+rE=\", false, function () {\n  return [useNavigate];\n});\n_c = SignInContainer;\nexport default SignInContainer;\nvar _c;\n$RefreshReg$(_c, \"SignInContainer\");","map":{"version":3,"names":["React","useCallback","useState","SignInPresenter","useNavigate","SignInContainer","navigate","isVisible","setIsVisible","roomName","setRoomName","roomId","setRoomId","onRoomNameChange","e","target","value","createRoom","window","alert","closeDialog","props"],"sources":["/Users/kimdonghyeon/Documents/GitHub/2021-2-FORIF-Hackathon-spring/client/src/pages/SignIn/SignInContainer.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport SignInPresenter from \"./SignInPresenter\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SignInContainer = () => {\n  const navigate = useNavigate();\n  const [isVisible, setIsVisible] = useState(false);\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomId, setRoomId] = useState(0);\n\n  const onRoomNameChange = (e) => {\n    setRoomName(e.target.value);\n  };\n\n  const createRoom = useCallback(() => {\n    if (roomName == \"\") {\n      window.alert(\"방 이름을 입력해 주세요!\");\n      return;\n    }\n    //생성하고 id 받아오기\n    setIsVisible(true);\n  }, []);\n\n  const closeDialog = useCallback(() => {\n    setIsVisible(false);\n    navigate(\"/\");\n  });\n\n  const props = {\n    createRoom: createRoom,\n    closeDialog: closeDialog,\n    onRoomNameChange: onRoomNameChange,\n    roomName,\n    isVisible,\n    roomId,\n  };\n\n  return <SignInPresenter {...props} />;\n};\n\nexport default SignInContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,UAAU,GAAGhB,WAAW,CAAC,MAAM;IACnC,IAAIQ,QAAQ,IAAI,EAAE,EAAE;MAClBS,MAAM,CAACC,KAAK,CAAC,gBAAgB,CAAC;MAC9B;IACF;IACA;IACAX,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,WAAW,GAAGnB,WAAW,CAAC,MAAM;IACpCO,YAAY,CAAC,KAAK,CAAC;IACnBF,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC,CAAC;EAEF,MAAMe,KAAK,GAAG;IACZJ,UAAU,EAAEA,UAAU;IACtBG,WAAW,EAAEA,WAAW;IACxBP,gBAAgB,EAAEA,gBAAgB;IAClCJ,QAAQ;IACRF,SAAS;IACTI;EACF,CAAC;EAED,oBAAO,QAAC,eAAe;IAAA,GAAKU;EAAK;IAAA;IAAA;IAAA;EAAA,QAAI;AACvC,CAAC;AAAC,GAlCIhB,eAAe;EAAA,QACFD,WAAW;AAAA;AAAA,KADxBC,eAAe;AAoCrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}